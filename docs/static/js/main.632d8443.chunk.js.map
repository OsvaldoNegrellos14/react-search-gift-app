{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","onSubmit","className","placeholder","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAO1CC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,EAAc,CAACE,IACfC,EAAc,MAIlB,OACE,uBAAMM,SAAUL,EAAcM,UAAU,aAAxC,UACE,uBACEC,YAAY,QACZC,KAAK,OACLC,MAAOX,EACPY,SAlBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,UAmBrB,wBAAQG,QAASZ,EAAcM,UAAU,oBAAzC,wB,8BC1BOO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBC,EAAM,GAERA,EADEF,EACC,iDAA6CG,UAAUH,GAAvD,+DAEG,oGALa,SAOEI,MAAMF,GAPR,cAOfG,EAPe,gBAQEA,EAASC,OARX,uBAQbC,EARa,EAQbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdjB,kBAkBdM,GAlBc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACE,sBAAKV,UAAU,yCAAf,UACE,qBAAKwB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCFGM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdjB,mBAAS,CAAEwB,KAAM,GAAIY,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAVAC,qBAAU,WACRvB,EAAQC,GACLuB,MAAK,SAAAV,GACJQ,EAAS,CACPd,KAAMM,EACNM,SAAS,SAGd,CAACnB,IAEGoB,EDV2BI,CAAaxB,GAAjCa,EADyB,EAC/BN,KAAcY,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAG3B,UAAU,0DAAb,2CAAkG,4BAAIQ,GAAY,kBAEjHmB,GAAW,qBAAK3B,UAAU,eAAf,SAA8B,sBAAKA,UAAU,aAAf,UAA4B,wBAAO,6BAC7E,qBAAKA,UAAU,YAAf,SAEIqB,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEbVc,EAAe,WAAO,IAAD,EACI1C,mBAAS,CAAC,KADd,mBACzB2C,EADyB,KACb5C,EADa,KAGhC,OACE,qCACE,qBAAKU,UAAU,cAAf,SACE,mDAEF,qBAAKA,UAAU,iBAAf,SACE,0EAEF,cAAC,EAAD,CAAaV,cAAeA,IAE5B,oBAAIU,UAAU,uBAAd,SAEIkC,EAAWjB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCfnB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.632d8443.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories([inputValue])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='home__form'>\r\n      <input\r\n        placeholder='memes'\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleSubmit} className='home__form-button'>Search</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n  let url = ''\r\n  if (category) {\r\n    url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&offset=0&api_key=7k3Ih4OwP5cHNULQYKXKE63TRA1I3KI2`\r\n  } else {\r\n    url = 'https://api.giphy.com/v1/gifs/trending?limit=10&offset=0&api_key=7k3Ih4OwP5cHNULQYKXKE63TRA1I3KI2'\r\n  }\r\n  const response = await fetch(url)\r\n  const { data } = await response.json()\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  // console.log(gifs)\r\n  return gifs\r\n}\r\n\r\n// export const getTrendingSearch = async () => {\r\n//   const url = 'https://api.giphy.com/v1/trending/searches?api_key=7k3Ih4OwP5cHNULQYKXKE63TRA1I3KI2'\r\n//   const response = await fetch(url)\r\n//   const { data } = await response.json()\r\n// }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  // console.log(id, title, url)\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n      {/* <a href={url} download={title} target='_blank' rel='noreferrer noopener'>\r\n        <button className='fa fa-download' />\r\n      </a> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n// import { Pagination } from './Pagination'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <p className='home__search-text animate__animated animate__fadeInDown'>Resultados de la b√∫squeda: <b>{category || 'Tendencias'}</b></p>\r\n      {/* {loading && <p className='animate__animated animate__flash'>Loading</p>} */}\r\n      {loading && <div className='home__loader'><div className='lds-ripple'><div /><div /></div></div>}\r\n      <div className='card-grid'>\r\n        {\r\n          images.map((img) => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n      {/* {pagination && <Pagination paginationData={pagination} category={category} />} */}\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({ data: [], loading: true })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(images => {\r\n        setState({\r\n          data: images,\r\n          loading: false\r\n        })\r\n      })\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([''])\r\n\r\n  return (\r\n    <>\r\n      <div className='home__title'>\r\n        <h1>Bucador de Gifs</h1>\r\n      </div>\r\n      <div className='home__subtitle'>\r\n        <p>Miles y miles de GIFS traidos por GIPHY</p>\r\n      </div>\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <ul className='home__container-gifs'>\r\n        {\r\n          categories.map((category) => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}